name: Deploy to GitHub Pages

# Déclencheur de l'action - ici, on l'exécute sur chaque push vers la branche 'main'
on:
  push:
    branches:
      - main  # Changez 'main' si vous utilisez une autre branche pour le développement

jobs:
  deploy:
    runs-on: ubuntu-latest  # L'environnement d'exécution du job (ici un serveur Ubuntu)

    steps:
      # Étape 1 : Récupérer le code du dépôt
      - name: Checkout code
        uses: actions/checkout@v2

      # Étape 2 : Installer Node.js (ajustez la version de Node.js en fonction de votre projet)
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'  # Changez la version de Node.js si nécessaire

      # Étape 3 : Installer les dépendances du projet
      - name: Install dependencies
        run: npm install  # Remplacez si vous utilisez un autre gestionnaire de paquets, comme yarn

      # Étape 4 : Générer le build de votre application
      - name: Build the project
        run: npm run build  # Remplacez si vous utilisez un autre script de build (comme 'yarn build')

      # Étape 5 : Déployer sur GitHub Pages
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages  # Branche cible pour déployer le site (vous pouvez choisir 'main' ou 'gh-pages')
          folder: build  # Dossier contenant les fichiers générés (généralement 'build' pour React ou 'dist' pour Vue)

      # Étape 6 : Cacher le cache des dépendances (facultatif mais recommandé pour améliorer les performances)
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
